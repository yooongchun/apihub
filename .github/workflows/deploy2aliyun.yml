# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build And Deploy To Aliyun ECS

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package -Dmaven.test.skip=true --file pom.xml
    - name: Send to aliyun server        
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.ALIYUN_ECS_PRIVATE_KEY }}
        ARGS: "-avzr --delete"
        SOURCE: "./target/api-hub-1.0.0-SNAPSHOT.jar"
        REMOTE_HOST: ${{ secrets.ALIYUN_ECS_REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.ALIYUN_ECS_REMOTE_USER }}
        TARGET: "/home/www/apihub/target"
    - name: Deploy on aliyun server
      uses: appleboy/ssh-action@master
      env:
        APP_NAME: "api-hub-1.0.0-SNAPSHOT.jar"
        WORKDIR: "/home/www/apihub"
      with:
        host: ${{ secrets.ALIYUN_ECS_REMOTE_HOST }}
        username: ${{ secrets.ALIYUN_ECS_REMOTE_USER }}
        password: ${{ secrets.ALIYUN_ECS_REMOTE_PASSWD }}
        script: |          
          cd ${WORKDIR}
          pwd
          ls -lah
          rm -rf ${APP_NAME}
          mv ./target/${APP_NAME} ./
          rm -rf ./target
          
          supervisorctl restart apihub
          echo 'deploy apihub done!'
          exit
